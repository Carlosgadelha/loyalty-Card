// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int @id @default(autoincrement())
  name        String
  email       String @unique
  password    String
  code        String @unique
  isAdmin     Boolean @default(false)
  client      Client[]
  Business    Business[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("users")
}

model Client{
  id          Int @id @default(autoincrement())
  user        User @relation(fields: [userId], references: [id])
  userId      Int
  cards       Card[]
  business    Business @relation(fields: [businessId], references: [id])
  businessId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("clients")
}

model Card{
  id          Int @id @default(autoincrement())
  client      Client @relation(fields: [clientId], references: [id])
  clientId    Int
  points      Int   @default(1)
  promotionId Int
  promotion   Promotions @relation(fields: [promotionId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("cards")
}

model Business{
  id          Int @id @default(autoincrement())
  name        String
  user         User @relation(fields: [userId], references: [id])
  userId       Int
  promotions   Promotions[]
  clients      Client[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("businesses")
}

model Promotions{
  id          Int @id @default(autoincrement())
  name        String
  discount    Int
  pointsNeeded Int
  business    Business @relation(fields: [businessId], references: [id])
  businessId  Int
  cards       Card[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("promotions")
}





